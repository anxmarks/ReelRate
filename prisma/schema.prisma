//rodar o comando npx prisma migrate dev --name init quando baixar o repositorio
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  nome      String?
  senha     String
  avatar    String? 
  criado_em DateTime   @default(now())
  reviews   Review[]   @relation("UserReviews")
  watchLater WatchLater[] @relation("UserWatchLater")
  watchList  WatchList[]  @relation("UserWatchList")
  followers   Follow[]   @relation("Followings")
  following   Follow[]   @relation("Followers")

  @@map("users")
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Float
  comment   String
  createdAt DateTime @default(now())
  user      User     @relation("UserReviews", fields: [userId], references: [id])
  userId    Int
  movieTmdbId Int   
}

model WatchLater {
  id         Int      @id @default(autoincrement())
  user       User     @relation("UserWatchLater", fields: [userId], references: [id])
  userId     Int
  movieTmdbId Int
  createdAt  DateTime @default(now())

  @@unique([userId, movieTmdbId]) 
}

model WatchList {
  id          Int      @id @default(autoincrement())
  user        User     @relation("UserWatchList", fields: [userId], references: [id])
  userId      Int
  nome        String
  movieTmdbId Int[]
  createdAt   DateTime @default(now()) 
}

model Follow {
  id         Int   @id @default(autoincrement())
  follower   User  @relation("Followers", fields: [followerId], references: [id])
  followerId Int
  following  User  @relation("Followings", fields: [followingId], references: [id])
  followingId Int
  createdAt  DateTime @default(now())

  @@unique([followerId, followingId])
}
